// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model suggestion{
  id String @id @default(uuid())
  investerID String
  postID String
}

model Invester{
  id String @id @default(uuid())
  name String
  password String
  emailId String
  intrest String
}

model Upvotes{
  id String @id @default(uuid())
  userID String
  postID String
  createdat DateTime @default(now())
  post Post @relation(fields: [postID], references: [id], onDelete: Cascade)
  user User @relation(fields: [userID], references: [id], onDelete: Cascade)
}
// post mean startup
model Post{
  id String @id @default(uuid())
  email String 
  password String
  title String
  body String
  topic String
  year String
  tokens Int @default(10)
  upvotes Upvotes[]
  comments Comment[]
}

model User{
  id String @id @default(uuid())
  name String
  password String
  emailId String
  intrest String
  comments Comment[]
  likes Like[]
  upvoted Upvotes[]
}

model Comment {
  id String @id @default(uuid())
  message String
  createdat DateTime @default(now())
  updatedat DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId String
  parent Comment? @relation("ParentChild", fields: [parentId], references: [id], onDelete: Cascade)
  children Comment[] @relation("ParentChild")
  parentId String?
  likes Like[]
}

model Like {
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
  userId String
  commentId String
  @@id([userId, commentId])
}

